<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Security-Policy" content="default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' http://www.google.com">
    <title>Add document</title>
    <link rel="stylesheet" href="/styles/styles.css">
</head>
<body>
    {{>header}}
    <div class="items-wrapper">
        {{>itemsContainer}}
        <div class="input-container">
            <input class="norm" id="name" type="text" placeholder="name">
            <div class="second-input" id="phonkInput" >
                <input  placeholder="phonk" value="{{editItem.phonk}}">
                <span class="error-caption">
                    wrong format
                </span>
            </div>
        </div>
        <div>
            <button id="confirmButton" onclick="confirm()">Confirm</button>
            <button onclick="cancer()">{{cancelButtonName}}</button>
        </div>
    </div>
    <script>
        function confirm(){
            handleAdd();
        }
        function cancer(){
            window.location.href="/"
        }

        
        const handleAdd = () => { 
            const data = document.getElementsByTagName('input');
            let errors = [];
            const name = document.querySelector("#name");
            const phonkInput = document.querySelector("#phonkInput"); 
            console.log(data[1].value.match(/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/));
            if (!name.value){
                errors.push(true);
                name.className += ' error';
            }
            else {
                errors.pop();
                name.className = 'input';
            }
            if (!data[1].value ||
            !data[1].value.match(/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/)){
                errors.push(true);
                
                phonkInput.className += ' invalid_input'; 
            } else {
                error = [];
                phonkInput.className = 'second-input'; 
            } 
            if (errors.length !== 0){ 
                return; 
                }
            fetch('/add', {
                method:"POST",
                headers:{ 
                    "Content-Type": "application/json"
                }, 
                body: JSON.stringify({
                    name: data[0].value,
                    phonk: data[1].value
                })
            }).then(res=> window.location.href = '/')

        } 
    </script>
</body>
</html>
