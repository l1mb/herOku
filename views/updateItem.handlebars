<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Security-Policy" content="default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' http://www.google.com">
    <title>Add document</title>
    <link rel="stylesheet" href="/styles/styles.css">
</head>
<body>
    {{>header}}
    <div class="items-wrapper">
        {{>itemsContainer}}
        <div class="input-container">
            <input class="norm" id="nameInput" type="text" placeholder="name" value="{{editItem.name}}">
             <div class="second-input" id="phonkInput" ></div>
                <input id="phonkInput" type="text" maxlength="12" placeholder="phonk" value="{{editItem.phonk}}">
                  <span class="error-caption">
                    wrong format
                </span>
            </div>

        <div>
            <button onclick="confirm()">Confirm</button>
            <button id="deleteButton" onclick="deleteItem()">Delete item</button>
            <button onclick="cancer()">{{cancelButtonName}}</button>

        </div>
    </div>
    <script>
        function confirm(){
            
            const name = document.querySelector("#nameInput");
            const data = document.getElementsByTagName('input');
            const phonkInput = data[1];
            let errors = [];
            if (!name.value){
                errors.push(true);
                name.className += ' invalid_input';
            }
            else {
                errors = [];
                name.className = 'input';
            }
            if (!data[1].value ||
            !data[1].value.match(/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/)){
                errors.push(true);
                
                phonkInput.className += ' invalid_input'; 
            } else {
                error = [];
                phonkInput.className = 'second-input'; 
            } 
            if(errors.length>0){
                return;
            }
            fetch('/update', {
                method:"POST",
                headers:{ 
                    "Content-Type": "application/json"
                }, 
                body: JSON.stringify({
                    name: data[0].value,
                    phonk: data[1].value,
                    id: `{{editItem.id}}`
                })
            }).then(res=> window.location.href = '/');
        }
        function cancer(){
            window.location.href="/"
        }
        function deleteItem(){
            fetch('/delete', {
                method:"post",
                headers:{ 
                    "Content-Type": "application/json"
                }, 
                body: JSON.stringify({
                    id:`{{editItem.id}}`
                }),
            }).then(res=> window.location.href = '/')
        }

    const disableButton = (event) => {
        const secInput = document.getElementsByTagName('input')[1];
        if(!secInput.value | !secInput.value.match(/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/))
        {
            const deletebutton = document.getElementById('deleteButton');
            deletebutton.disabled = true;
            deletebutton.classList="disabled";
        }
        else{
            const deletebutton = document.getElementById('deleteButton');
            deletebutton.disabled = false;
            deletebutton.classList="";
        }

    }
    document.addEventListener("DOMContentLoaded", () => {
        document.querySelector('#nameInput').addEventListener('keydown', disableButton);
        
        document.querySelector('#phonkInput').addEventListener('keydown', disableButton);
        
    })
    
    </script>
</body>
</html>